//
// Generated by CocoaPods-Keys
// on 18/03/2020
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "TRPKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation TRPKeys

  @dynamic passwordClientId;
  @dynamic passwordClientSecret;
  @dynamic clientId;
  @dynamic clientSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(TRPKeys *, SEL) = NULL;

  if ([key isEqualToString:@"passwordClientId"]) {
    implementation = _podKeys371c1f0718604c7728d3a69a621d957c;
  }

  if ([key isEqualToString:@"passwordClientSecret"]) {
    implementation = _podKeysf1b23af45d5d1c74c854681ed75070e3;
  }

  if ([key isEqualToString:@"clientId"]) {
    implementation = _podKeysf3ffe8e1f804f2074aa5cc55233673b8;
  }

  if ([key isEqualToString:@"clientSecret"]) {
    implementation = _podKeys2b53761249254ce6b502f521e5cc0683;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys371c1f0718604c7728d3a69a621d957c(TRPKeys *self, SEL _cmd)
{
  
    
      char cString[2] = { TRPKeysData[361], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysf1b23af45d5d1c74c854681ed75070e3(TRPKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { TRPKeysData[1424], TRPKeysData[720], TRPKeysData[1521], TRPKeysData[1797], TRPKeysData[827], TRPKeysData[634], TRPKeysData[593], TRPKeysData[2089], TRPKeysData[1987], TRPKeysData[1962], TRPKeysData[2210], TRPKeysData[2681], TRPKeysData[45], TRPKeysData[114], TRPKeysData[1353], TRPKeysData[2327], TRPKeysData[1007], TRPKeysData[1640], TRPKeysData[296], TRPKeysData[298], TRPKeysData[1745], TRPKeysData[2912], TRPKeysData[2132], TRPKeysData[642], TRPKeysData[59], TRPKeysData[643], TRPKeysData[2725], TRPKeysData[1000], TRPKeysData[2065], TRPKeysData[226], TRPKeysData[825], TRPKeysData[635], TRPKeysData[2025], TRPKeysData[1858], TRPKeysData[167], TRPKeysData[2107], TRPKeysData[1969], TRPKeysData[2505], TRPKeysData[2479], TRPKeysData[2285], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysf3ffe8e1f804f2074aa5cc55233673b8(TRPKeys *self, SEL _cmd)
{
  
    
      char cString[2] = { TRPKeysData[434], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys2b53761249254ce6b502f521e5cc0683(TRPKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { TRPKeysData[2481], TRPKeysData[304], TRPKeysData[2078], TRPKeysData[1576], TRPKeysData[1115], TRPKeysData[306], TRPKeysData[884], TRPKeysData[1545], TRPKeysData[1234], TRPKeysData[1136], TRPKeysData[1751], TRPKeysData[2864], TRPKeysData[1580], TRPKeysData[1408], TRPKeysData[1380], TRPKeysData[807], TRPKeysData[498], TRPKeysData[1698], TRPKeysData[416], TRPKeysData[443], TRPKeysData[2075], TRPKeysData[147], TRPKeysData[87], TRPKeysData[2573], TRPKeysData[851], TRPKeysData[1488], TRPKeysData[1103], TRPKeysData[2521], TRPKeysData[559], TRPKeysData[2518], TRPKeysData[883], TRPKeysData[89], TRPKeysData[971], TRPKeysData[812], TRPKeysData[839], TRPKeysData[1335], TRPKeysData[435], TRPKeysData[268], TRPKeysData[1721], TRPKeysData[1], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char TRPKeysData[2954] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"passwordClientId": self.passwordClientId,
            @"passwordClientSecret": self.passwordClientSecret,
            @"clientId": self.clientId,
            @"clientSecret": self.clientSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
